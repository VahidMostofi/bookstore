apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      name: mongodb
  selector:
    role: mongo
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: manual
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/vahid/workspace/bookstore/mongodb_volume"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: vahidmostofi/bookstore_db
          # imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources: 
            requests:
              memory: "512Mi"
              cpu: 0.25
            limits:
              memory: "512Mi"
              cpu: 0.25
          # command: ["/bin/sh"]
          # args: ["-c", "sleep 10; mongoimport --db bookstoreDB --collection users --type json --file users.json --jsonArray; sleep 10"]
          # volumeMounts:
          #   - name: pv-storage
          #     mountPath: /data/db
      # volumes:
      #   - name: pv-storage
      #     persistentVolumeClaim:
      #       claimName: pv-claim
